// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2017-11-07 21:50:10.513270823 +0300 +03

package docs

import (
	"github.com/swaggo/swag"
)

var doc = `{
    "swagger": "2.0",
    "info": {
        "description": "updates existing string value by the key and new value specified",
        "contact": {},
        "license": {}
    },
    "paths": {
        "/api/string": {
            "get": {
                "description": "gets all string cache keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "string cache keys",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.StringCacheKeysContract"
                        }
                    },
                    "500": {
                        "description": "server error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.ErrorContract"
                        }
                    }
                }
            }
        },
        "/api/string/": {
            "post": {
                "description": "posts new string value",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.NewStringCacheValueContract"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.ErrorContract"
                        }
                    },
                    "500": {
                        "description": "server error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.ErrorContract"
                        }
                    }
                }
            }
        },
        "/api/string/{key}": {
            "delete": {
                "description": "deletes string cache entry by key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "key was not found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.ErrorContract"
                        }
                    },
                    "500": {
                        "description": "server error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.ErrorContract"
                        }
                    }
                }
            }
        },
        "/api/string/{new-key}": {
            "get": {
                "description": "gets string cache entry by key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "new-key",
                        "name": "new-key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "key and corresponding value",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.StringCacheValueContract"
                        }
                    },
                    "404": {
                        "description": "key was not found",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.ErrorContract"
                        }
                    },
                    "500": {
                        "description": "server error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.ErrorContract"
                        }
                    }
                }
            }
        },
        "/api/string/{update-key}": {
            "put": {
                "description": "updates existing string value by the key and new value specified",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "update-key",
                        "name": "update-key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.UpdateStringCacheValueContract"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "no content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad request",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.ErrorContract"
                        }
                    },
                    "500": {
                        "description": "server error",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/contracts.ErrorContract"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "contracts.ErrorContract": {
            "type": "object",
            "properties": {
                "Status": {
                    "type": "string"
                }
            }
        },
        "contracts.NewStringCacheValueContract": {
            "type": "object",
            "properties": {
                "Key": {
                    "type": "string"
                },
                "TTL": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            }
        },
        "contracts.StringCacheKeysContract": {
            "type": "object",
            "properties": {
                "Keys": {
                    "type": "array"
                }
            }
        },
        "contracts.StringCacheValueContract": {
            "type": "object",
            "properties": {
                "Key": {
                    "type": "string"
                },
                "Value": {
                    "type": "string"
                }
            }
        },
        "contracts.UpdateStringCacheValueContract": {
            "type": "object",
            "properties": {
                "NewValue": {
                    "type": "string"
                },
                "OriginalValue": {
                    "type": "string"
                }
            }
        }
    }
}`

type s struct{}

func (s *s) ReadDoc() string {
	return doc
}
func init() {
	swag.Register(swag.Name, &s{})
}
